<?php
/**
 * Plugin Name: PPOM Addon Product Enquiry Form
 * Description: An addon to PPOM
 * Version: 1.3
 * Text Domain: ppom-addon-enf
 * License: GPL2
 */

namespace PPOM_Pro\Addons\EnquiryForm;

use PPOM_Pro\Abstract_Addon;

class EnquiryForm extends Abstract_Addon {

	function run_hooks() {
		// Action display content after add to cart btn
		add_action( 'woocommerce_after_add_to_cart_button', array( $this, 'enquiryform_render' ) );

		// enquriy form submition
		add_action( 'wp_ajax_ppom_enf_ajax', array( $this, 'ppom_send_enquiry_form' ) );
		add_action( 'wp_ajax_nopriv_ppom_enf_ajax', array( $this, 'ppom_send_enquiry_form' ) );

		// Product Settings
		add_action( 'ppom_meta_box_after_list', array( $this, 'enf_addon_options' ) );
		add_action( 'ppom_proccess_meta', array( $this, 'enf_save_addon_option' ) );

		// PPOM Settings Filter
		add_filter( 'ppom_settings_data', array( $this, 'enquiry_form_setting' ), 10, 1 );

		// plugin page setting hook
		$ppom_basename = plugin_basename( __FILE__ );
		add_filter( "plugin_action_links_{$ppom_basename}", array( $this, 'ppom_enf_settings_link' ) );
	}


	/*
	 *  Enquiry form show frontend
	 */
	function enquiryform_render() {

		global $product;
		$product_id = ppom_get_product_id( $product );

		// check if enquriy form is enable
		$is_active = get_post_meta( $product_id, 'ppom_enf_enable', true );

		if ( $is_active == 'on' ) {

			// Load scripts
			wp_enqueue_style( 'ppom-enf-css', $this->addon_url . '/css/ppom-frontent-enf.css' );
			wp_enqueue_script( 'ppom-enf-js', $this->addon_url . '/js/ppom-frontent-enf.js', array( 'jquery' ), 16.4, true );

			// get disabled cart btn setting
			$cart_btn_hide = ppom_get_option( 'ppom-enf-hide-cart' );

			$localize_meta = array();
			$localize_meta = array(
				'ajax_url'      => admin_url( 'admin-ajax.php' ),
				'loading'       => $this->addon_url . '/images/enf-loader.gif',
				'cart_btn_hide' => $cart_btn_hide,
			);

			// ajax load
			wp_localize_script( 'ppom-enf-js', 'ppom_enf_vars', $localize_meta );


			ob_start();
			$templates_name = 'enquiry-form.php';
			$template_vars  = array( 'product_id' => $product_id );
			$this->load_template( $templates_name, $template_vars );
			$html = ob_get_clean();

			echo $html;
		}
	}


	/*
	 * Enquiry form settings meta
	 */
	function enquiry_form_setting( $ppom_settings ) {

		// Settings meta
		$ppom_settings[] = array(
			'title' => __( 'PPOM Enquiry Form', 'woocommerce-product-addon' ),
			'type'  => 'title',
			'desc'  => '',
			'id'    => 'ppom_enquiry_form_id',
		);

		$ppom_settings[] = array(
			'title'    => __( 'Emails Recepients', 'woocommerce-product-addon' ),
			'type'     => 'text',
			'label'    => __( 'Enable', 'woocommerce-product-addon' ),
			'default'  => '',
			'id'       => 'ppom-enf-emails-list',
			'desc'     => __( 'Enquiry form receipts by separated commas, to get enquiry form data.', 'woocommerce-product-addon' ),
			'desc_tip' => true,
		);

		$ppom_settings[] = array(
			'title'    => __( 'Note', 'woocommerce-product-addon' ),
			'type'     => 'textarea',
			'label'    => __( 'Button', 'woocommerce-product-addon' ),
			'default'  => 'All selected data will be sent to vendor',
			'id'       => 'ppom-enf-note',
			'desc'     => __( 'Message show on enquiry form', 'woocommerce-product-addon' ),
			'desc_tip' => true,
		);

		$ppom_settings[] = array(
			'title'    => __( 'Send Message', 'woocommerce-product-addon' ),
			'type'     => 'textarea',
			'label'    => __( 'Button', 'woocommerce-product-addon' ),
			'default'  => '',
			'id'       => 'ppom-enf-send-msg',
			'desc'     => __( 'Message show after enquiry form send.', 'woocommerce-product-addon' ),
			'desc_tip' => true,
		);

		$ppom_settings[] = array(
			'title'    => __( 'Button Title', 'woocommerce-product-addon' ),
			'type'     => 'text',
			'label'    => __( 'Button', 'woocommerce-product-addon' ),
			'default'  => '',
			'id'       => 'ppom-enf-btn-title',
			'desc'     => __( 'Change Enquiry form button title', 'woocommerce-product-addon' ),
			'desc_tip' => true,
		);

		$ppom_settings[] = array(
			'title'    => __( 'Button Class', 'woocommerce-product-addon' ),
			'type'     => 'text',
			'label'    => __( 'Button', 'woocommerce-product-addon' ),
			'default'  => '',
			'id'       => 'ppom-enf-btn-class',
			'desc'     => __( ' Add Enquiry form button classes by separated commas.', 'woocommerce-product-addon' ),
			'desc_tip' => true,
		);

		$ppom_settings[] = array(
			'title'    => __( 'Button Text Color', 'woocommerce-product-addon' ),
			'type'     => 'color',
			'label'    => __( 'Button', 'woocommerce-product-addon' ),
			'default'  => '',
			'id'       => 'ppom-enf-btn-text-color',
			'desc'     => __( ' Add Enquiry form button text color.', 'woocommerce-product-addon' ),
			'desc_tip' => true,
		);

		$ppom_settings[] = array(
			'title'    => __( 'Button BG Color', 'woocommerce-product-addon' ),
			'type'     => 'color',
			'label'    => __( 'Button', 'woocommerce-product-addon' ),
			'default'  => '',
			'id'       => 'ppom-enf-btn-bg-color',
			'desc'     => __( ' Add Enquiry form button background color.', 'woocommerce-product-addon' ),
			'desc_tip' => true,
		);

		$ppom_settings[] = array(
			'title'   => __( 'Email Sender Also', 'woocommerce-product-addon' ),
			'type'    => 'checkbox',
			'label'   => __( 'Button', 'woocommerce-product-addon' ),
			'default' => '',
			'id'      => 'ppom-enf-user-send',
			'desc'    => __( 'Send enquiry form data to user.', 'woocommerce-product-addon' ),
		);

		$ppom_settings[] = array(
			'title'   => __( 'Hide Add To Cart Button', 'woocommerce-product-addon' ),
			'type'    => 'checkbox',
			'label'   => __( 'Button', 'woocommerce-product-addon' ),
			'default' => '',
			'id'      => 'ppom-enf-hide-cart',
			'desc'    => __( 'Hide add to cart button.', 'woocommerce-product-addon' ),
		);

		$ppom_settings[] = array(
			'type' => 'sectionend',
			'id'   => 'ppom_enquiry_form_id',
		);


		return $ppom_settings;
	}


	/*
	 * Enquiry form send meta frontend
	 */
	function ppom_send_enquiry_form() {

		// check nonce for security
		$nonce = $_POST['ppom_enf_nonce'];
		if ( ! wp_verify_nonce( $nonce, 'ppom_enf_nonce_id' ) ) {
			die( 'Sorry, your nonce did not verify.' );
		}

		$user_email   = $_POST['user_email'];
		$user_message = stripslashes( $_POST['user_message'] );
		$product_id   = $_POST['product_id'];
		$ppom_meta    = $_POST['ppom_meta'];


		$params = array();
		parse_str( $ppom_meta, $params );

		// This is required in ppom_make_meta_data function
		$params['data'] = wc_get_product( $product_id );

		if ( function_exists( 'ppom_make_meta_data' ) ) {

			$ppom_meta_data = ppom_make_meta_data( $params );
		}

		ob_start();
		$templates_name = 'ppom-meta.php';
		$template_vars  = array( 'ppom_meta_data' => $ppom_meta_data );
		$this->load_template( $templates_name, $template_vars );
		$form_html = ob_get_clean();

		$product      = wc_get_product( $product_id );
		$product_url  = get_permalink( $product_id );
		$product_name = $product->get_title();

		// Email header
		$site_title = get_bloginfo( 'name' );
		$headers[]  = "From: {$site_title} <{$user_email}>";
		$headers[]  = 'Content-Type: text/html';
		$headers[]  = "MIME-Version: 1.0\r\n";

		// Email Message
		$message_html  = '';
		$message_html .= '<div style="display: flex;width: 100%;">';
		$message_html .= '<h4>' . __( 'Product Name: ', 'woocommerce-product-addon' ) . '</h4>';
		$message_html .= '<a style="margin-left: 6px;margin-top: 16px;" href="' . esc_attr( $product_url ) . '"> ' . esc_attr( $product_name ) . ' </a>';
		$message_html .= '</div>';
		$message_html .= '<p>' . $user_message . '</p>';
		$message_html .= $form_html;

		// Email Subject
		$email_subject = apply_filters( 'ppom_enf_subject', sprintf( __( 'Enquiry received for %s', 'woocommerce-product-addon' ), $product_name ), $product );

		// Email List
		$the_email    = ppom_get_option( 'ppom-enf-emails-list' ) != '' ? explode( ',', ppom_get_option( 'ppom-enf-emails-list' ) ) : array();
		$send_to_user = ppom_get_option( 'ppom-enf-user-send' ) != '' ? ppom_get_option( 'ppom-enf-user-send' ) : '';

		if ( $send_to_user == 'yes' ) {
			$the_email[] = $user_email;
		}

		$the_email[] = get_bloginfo( 'admin_email' );

		// email sent successfully messgae
		$send_msg = ppom_get_option( 'ppom-enf-send-msg', 'Email sent successfully' );

		if ( wp_mail( $the_email, $email_subject, $message_html, $headers ) ) {
			$response = array(
				'status'  => 'success',
				'message' => $send_msg,
			);

		} else {

			$response = array(
				'status'  => 'error',
				'message' => __( 'Email not send, contact to admin', 'woocommerce-product-addon' ),
			);
		}

		wp_send_json( $response );

	}


	/*
	 * Addon option to enable enf
	 */
	function enf_addon_options( $post ) {
		$is_active = get_post_meta( $post->ID, 'ppom_enf_enable', true );
		$html      = '<hr>';
		$html     .= '<strong>' . __( 'PPOM Enquiry Form Settings', 'woocommerce-product-addon' ) . '</strong>';
		$html     .= '<p><label><input type="checkbox" ' . checked( $is_active, 'on', false ) . ' name="ppom_enf_enable">' . __( 'Enable Enquiry Form', 'woocommerce-product-addon' ) . '</label></p>';
		echo $html;

	}

	function enf_save_addon_option( $post_id ) {
		if ( isset( $_POST['ppom_enf_enable'] ) ) {
			update_post_meta( $post_id, 'ppom_enf_enable', $_POST['ppom_enf_enable'] );
		} else {
			update_post_meta( $post_id, 'ppom_enf_enable', '' );
		}
	}


	/*
	 *  Settings Link On Plugin Page
	 */
	function ppom_enf_settings_link( $links ) {
		$wc_settings_page = admin_url( 'admin.php?page=wc-settings' );
		$ppom_pdf_url     = add_query_arg( array( 'tab' => 'ppom_settings' ), $wc_settings_page );

		$ppom_links   = array();
		$ppom_links[] = sprintf( __( '<a href="%s">Settings</a>', 'woocommerce-product-addon' ), esc_url( $ppom_pdf_url ) );


		foreach ( $ppom_links as $link ) {

			array_push( $links, $link );
		}

		return $links;
	}

	function load_settings() {
		$settings = array(
			'ppom-enf-emails-list'    => array(
				'type'  => 'text',
				'title' => __( 'Emails Recepients', 'woocommerce-product-addon' ),
				'desc'  => __( 'Enquiry form receipts by separated commas, to get enquiry form data.', 'woocommerce-product-addon' ),
			),
			'ppom-enf-note'           => array(
				'type'    => 'textarea',
				'title'   => __( 'Note', 'woocommerce-product-addon' ),
				'desc'    => __( 'Message show on enquiry form', 'woocommerce-product-addon' ),
				'default' => 'All selected data will be sent to vendor',
			),
			'ppom-enf-send-msg'       => array(
				'type'  => 'textarea',
				'title' => __( 'Send Message', 'woocommerce-product-addon' ),
				'desc'  => __( 'Message show after enquiry form send.', 'woocommerce-product-addon' ),
			),
			'ppom-enf-btn-title'      => array(
				'type'  => 'text',
				'title' => __( 'Button Title', 'woocommerce-product-addon' ),
				'desc'  => __( 'Change Enquiry form button title', 'woocommerce-product-addon' ),
			),
			'ppom-enf-btn-class'      => array(
				'type'  => 'text',
				'title' => __( 'Button Class', 'woocommerce-product-addon' ),
				'desc'  => __( ' Add Enquiry form button classes by separated commas.', 'woocommerce-product-addon' ),
			),
			'ppom-enf-btn-text-color' => array(
				'type'  => 'color',
				'title' => __( 'Button Text Color', 'woocommerce-product-addon' ),
				'desc'  => __( ' Add Enquiry form button text color.', 'woocommerce-product-addon' ),
			),
			'ppom-enf-btn-bg-color'   => array(
				'type'  => 'color',
				'title' => __( 'Button BG Color', 'woocommerce-product-addon' ),
				'desc'  => __( ' Add Enquiry form button background color.', 'woocommerce-product-addon' ),
			),
			'ppom-enf-user-send'      => array(
				'type'  => 'checkbox',
				'title' => __( 'Email Sender Also', 'woocommerce-product-addon' ),
				'desc'  => __( 'Send enquiry form data to user.', 'woocommerce-product-addon' ),
			),
			'ppom-enf-hide-cart'      => array(
				'type'  => 'checkbox',
				'title' => __( 'Hide Add To Cart Button', 'woocommerce-product-addon' ),
				'desc'  => __( 'Hide add to cart button.', 'woocommerce-product-addon' ),
			),
		);

		$panels = array(
			'ppom_addon_enquiryform' => array(
				'id'          => 'ppom_addon_enquiryform',
				'title'       => __( 'Enquiry Form', 'woocommerce-product-addon' ),
				'desc'        => 'It will render the enquiry form settings.',
				'icon'        => '',
				'active'      => 'yes',
				'is_sabpanel' => true,
			),
		);

		$tabs = array(
			'ppom_addons' =>
				array(
					'title'  => 'Addons',
					'tab_id' => 'ppom_addons',
					'enable' => true,
				),
		);

		PPOMSETTINGS()->register_tabs( $tabs )->register_panel( 'ppom_addons', $panels )->register_setting( 'ppom_addon_enquiryform', $settings );
	}
}
