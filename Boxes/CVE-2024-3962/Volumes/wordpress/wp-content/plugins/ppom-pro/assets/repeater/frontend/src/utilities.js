const CLONE_INDICATOR_SUFFIX = '__clone_';

const rename_ids = (j_cloned_fields, repeat_id, callback) => {
  var ppom_inputs = ppom_input_vars.field_meta.map((input) => {
    const product_id = ppom_input_vars.product_id;

    // update field wrapper (ppom-field-wrapper dataname class)
    j_cloned_fields
      .find(`.ppom-field-wrapper.${input.data_name}`)
      .attr("data-data_name", `${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`)
      .removeClass(input.data_name)
      .removeClass(`ppom-wrapper_outer-${input.data_name}`)
      .addClass(`${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`)
      .addClass(`ppom-wrapper_outer-${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`);

    switch (input.type) {
      case "checkbox":
        jQuery.each(input.options, function (i, option) {
          var fieldclass = `.${input.data_name}.ppom-option-${option.id}`;
          var newid = `${product_id}-${input.data_name}_${repeat_id}-${option.id}`;
          var newdname = `ppom[fields][${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}][]`;
          // console.log(fieldclass);
          j_cloned_fields
            .find(`${fieldclass}`)
            .attr("id", newid)
            .attr("name", newdname)
            .attr("data-data_name", `${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`)
            .closest("label")
            .attr("for", newid);
        });
        break;

      case "file":
        var fieldclass = `.ppom-input.${input.data_name}`;
        var newid = `selectfiles-${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`;
        var filecontainer = `.ppom-input-${input.data_name}`;
        var newfilecontainer = `ppom-file-container-${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`;
        var filelist = `.filelist.${input.data_name}`;
        var newfilelist = `filelist-${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`;
        // var newdname = `ppom[fields][${input.data_name}][${repeat_id}]`;
        // console.log(id, newid);
        j_cloned_fields.find(`${fieldclass}`).attr("id", newid);
        j_cloned_fields.find(`${filecontainer}`).attr("id", newfilecontainer);
        j_cloned_fields.find(`${filelist}`).attr("id", newfilelist).html("");
        break;

      case "selectqty":
        var selectopt = `.ppom-input.${input.data_name}`;
        var selectopt_id = `${input.data_name}_${repeat_id}`;
        var selectopt_name = `ppom[fields][${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}][option]`;
        j_cloned_fields
          .find(`${selectopt}`)
          .attr("id", selectopt_id)
          .attr("name", selectopt_name)
          .attr("data-data_name", `${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`);

        var selectqty = `.ppom-quantity.${input.data_name}`;
        var selectqty_id = `${input.data_name}_${repeat_id}-qty`;
        var selectqty_name = `ppom[fields][${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}][qty]`;
        j_cloned_fields
          .find(`${selectqty}`)
          .attr("id", selectqty_id)
          .attr("name", selectqty_name)
          .attr("data-data_name", `${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`);
        break;

      default:
        var fieldclass = `.ppom-input.${input.data_name}`;
        var newid = `${input.data_name}_${repeat_id}`;
        var newdname = `ppom[fields][${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}]`;
        //   console.log(id, newid);
        j_cloned_fields
          .find(`${fieldclass}`)
          .attr("id", newid)
          .attr("name", newdname)
          .siblings("label")
          .attr("for", newid)
          .closest("label")
          .attr("for", newid);

        if (input.type === "color") {
          cloned_fields.find('div[data-type="color"]').map((i, elem) => {
            $(elem).find(".iris-picker").remove();
          });
        }
    }

    return {
      ...input,
      data_name: `${input.data_name}${CLONE_INDICATOR_SUFFIX}${repeat_id}`,
      // data_name: `${input.data_name}_${repeat_id}`,
      org_data_name: input.data_name,
    };
  });
  // console.log(ppom_inputs);
  callback(ppom_inputs);
};

/**
 * Clone mode (allow clone from first box only or each boxes)
 * Maintain mode: The clone mode is not used for a long time (it's like was same when we(Themeisle)'ve acquired the plugin
 * The clone mode setting is still available in PPOM Settings (under repeater tab). That should be investigated an activated again, in the future versions.
 */
const handleCloneMode = (j_cloned_fields) => {
  if( ppom_repeater_vars.clone_mode === 'first_box' ){
    j_cloned_fields.find('.clone.ppom-repeater-icons').remove();
    j_cloned_fields.find('.remove.ppom-repeater-icons').show();
  }
};

export { rename_ids };
