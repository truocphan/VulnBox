<?php
/**
 * Handles admin notices.
 */

namespace PPOM_Pro;

/**
 * Admin class.
 */
class Admin {

	/**
	 * Run the Admin class.
	 *
	 * @return bool
	 */
	public function run() {
		if ( ! $this->has_woocommerce() ) {
			add_action( 'admin_notices', array( $this, 'notice_no_woo' ) );

			return false;
		}

		if ( ! $this->is_ppom_installed() ) {
			add_action( 'admin_notices', array( $this, 'ppom_notice_not_installed' ) );

			return false;
		}

		// Remove Get Pro notice from admin
		remove_action( 'ppom_after_ppom_field_admin', 'ppom_admin_pro_version_notice', 10 );

		return true;
	}

	/**
	 * Admin notices if PPOM is not installed
	 */
	public function ppom_notice_not_installed() {

		$ppom_install_url = admin_url( 'plugin-install.php?s=ppom&tab=search&type=term' );
		?>
		<div class="notice notice-error is-dismissible">
			<p><?php _e( 'PPOM Basic Version is NOT installed, please download it first.', 'woocommerce-product-addon' ); ?>
				<a class="button"
				   href="<?php echo esc_url( $ppom_install_url ); ?>"><?php _e( 'Install Plugin', 'woocommerce-product-addon' ); ?></a></p>
		</div>
		<?php
	}

	/**
	 * Admin notices if PPOM is not installed
	 */
	public function notice_no_woo() {

		$ppom_install_url = admin_url( 'plugin-install.php?s=WooCommerce&tab=search&type=term' );
		?>
		<div class="notice notice-error is-dismissible">
			<p><?php _e( 'WooCommerce is NOT installed, please download it first.', 'woocommerce-product-addon' ); ?>
				<a class="button"
				   href="<?php echo esc_url( $ppom_install_url ); ?>"><?php _e( 'Install Plugin', 'woocommerce-product-addon' ); ?></a></p>
		</div>
		<?php
	}

	/**
	 * Checking if PPOM Basic version is installed.
	 *
	 * @return boolean
	 */
	public function is_ppom_installed() {

		$return = false;

		if ( class_exists( 'NM_PersonalizedProduct' ) ) {
			$return = true;
		}

		return $return;
	}

	/**
	 * Checks if WooCommerce exists
	 *
	 * @return bool
	 */
	private function has_woocommerce() {
		return class_exists( 'WooCommerce' );
	}
}
