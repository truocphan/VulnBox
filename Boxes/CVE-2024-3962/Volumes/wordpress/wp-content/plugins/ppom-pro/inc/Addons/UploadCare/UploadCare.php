<?php
/**
 * Plugin Name: PPOM Integration with UploadCare
 * Description: PPOM Add-on for UploadCare for image processing. Learn more about UploadCare:
 * http://uploadcare.com
 * Version: 1.2
 * Text Domain: ppom-addon-uploadcare
 * License: GPL2
 */


namespace PPOM_Pro\Addons\UploadCare;

use PPOM_Pro\Abstract_Addon;

class UploadCare extends Abstract_Addon {

	function run_hooks() {

		// Load Custom Scripts
		add_action( 'ppom_hooks_inputs', array( $this, 'load_scripts' ), 10, 2 );

		// Render Datepicker Input
		add_action( 'ppom_rendering_inputs', array( $this, 'render_input' ), 10, 5 );

		// File path
		add_filter( 'nm_input_class-uploadcare', array( $this, 'addon_path' ), 19, 2 );

		// Loading all input in PRO
		add_filter( 'ppom_all_inputs', array( $this, 'load_addon' ), 10, 2 );

		// Admin Setting filter
		add_filter( 'render_input_types', array( $this, 'ppom_render_admin_settings' ), 10, 6 );

		// PPOM Admin Tabs
		add_filter( 'ppom_fields_tabs_show', array( $this, 'ppom_tabs_render' ), 10, 2 );
		add_filter( 'ppom_tabs_panel_classes', array( $this, 'ppom_tabs_classes' ), 10, 1 );

		add_filter( 'ppom_meta_data', array( $this, 'cart_meta' ), 15, 2 );

	}

	function addon_path( $path, $type ) {

		if ( file_exists( $this->addon_path . '/classes/input.uploadcare.php' ) ) {
			$path = $this->addon_path . "/classes/input.{$type}.php";
		}

		return $path;
	}

	/*
	**============= Loading all PRO inputs ================
	*/
	function load_addon( $inputs_array, $inputObj ) {

		$inputs_array['uploadcare'] = $inputObj->get_input( 'uploadcare' );

		return $inputs_array;
	}

	function load_scripts( $field, $data_name ) {

		if ( $field['type'] != 'uploadcare' ) {
			return '';
		}

		if ( $field['type'] == 'uploadcare' ) {
			// ppom_pa($field);

			$uploadcare_locale = isset( $field['uploadcare_locale'] ) ? $field['uploadcare_locale'] : '';
			$crop_ratio        = isset( $field['crop_ratio'] ) ? $field['crop_ratio'] : '';
			// ppom_pa($file);

			wp_enqueue_style( 'uploadcare_css', $this->addon_url . '/css/uploadcare.css' );

			wp_enqueue_script( 'ppom-uploadcare-js', '//ucarecdn.com/libs/widget/3.x/uploadcare.full.min.js', array( 'jquery' ), 1.0, true );
			wp_enqueue_script( 'ppom-uploadcare-preview-js', '//ucarecdn.com/libs/widget-tab-effects/1.x/uploadcare.tab-effects.js', array( 'ppom-uploadcare-js' ), 1.0, true );

			wp_enqueue_script( 'ppom-uploadcare-custom-js', $this->addon_url . '/js/uploadcare.js', array( 'ppom-uploadcare-js' ), 1.0, true );

			$js_vars = [
				'public_key'        => '7322d5253662a6edfe73',
				'uploadcare_locale' => $uploadcare_locale,
				'crop_ratio'        => $crop_ratio,
			];
			wp_localize_script( 'ppom-uploadcare-custom-js', 'ppom_uploadcare_vars', $js_vars );

		}

	}

	/*
	**========== Render Backend PPOM Meta Settings ===========
	*/
	function ppom_render_admin_settings( $html_input, $type, $name, $values, $options, $field_index ) {

		if ( $type == 'uploadcare_settings' ) {
		}

		return $html_input;
	}

	/* **========== Handle Admin Tabs Classes =========== */
	function ppom_tabs_classes( $settings ) {

		foreach ( $settings as $fields_meta_key => $meta ) {

			$type = isset( $meta['type'] ) ? $meta['type'] : '';
			if ( $type == 'uploadcare_settings' ) {
				$settings['uploadcare_settings']['tabs_class'] = array(
					'ppom_handle_uploadcare_settings_tab',
					'col-md-12',
				);
			}
			if ( $type == 'uploadcare_effects' ) {
				$settings['uploadcare_effects']['tabs_class'] = array(
					'ppom_handle_uploacare_effects_tab',
					'col-md-12',
				);
			}
			if ( $type == 'upload_sources' ) {
				$settings['upload_sources']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-12' );
			}
			if ( $type == 'uploadcare_validators' ) {
				$settings['uploadcare_validators']['tabs_class'] = array( 'ppom_handle_validators_tab', 'col-md-12' );
			}
			if ( $fields_meta_key == 'public_key' ) {
				$settings['public_key']['tabs_class'] = array( 'ppom_handle_uploadcare_settings_tab', 'col-md-6' );
			}
			if ( $fields_meta_key == 'uploadcare_locale' ) {
				$settings['uploadcare_locale']['tabs_class'] = array(
					'ppom_handle_uploadcare_settings_tab',
					'col-md-6',
				);
			}
			if ( $fields_meta_key == 'multiple_max' ) {
				$settings['multiple_max']['tabs_class'] = array( 'ppom_handle_uploadcare_settings_tab', 'col-md-6' );
			}
			if ( $fields_meta_key == 'multiple_min' ) {
				$settings['multiple_min']['tabs_class'] = array( 'ppom_handle_uploadcare_settings_tab', 'col-md-6' );
			}
			if ( $fields_meta_key == 'crop_ratio' ) {
				$settings['crop_ratio']['tabs_class'] = array( 'ppom_handle_uploadcare_settings_tab', 'col-md-6' );
			}
			if ( $fields_meta_key == 'image_shrink' ) {
				$settings['image_shrink']['tabs_class'] = array( 'ppom_handle_uploadcare_settings_tab', 'col-md-6' );
			}
			if ( $fields_meta_key == 'multipart_minimum_size' ) {
				$settings['multipart_minimum_size']['tabs_class'] = array(
					'ppom_handle_uploadcare_settings_tab',
					'col-md-6',
				);
			}
			if ( $fields_meta_key == 'multiple' ) {
				$settings['multiple']['tabs_class'] = array( 'ppom_handle_uploadcare_settings_tab', 'col-md-12' );
			}
			if ( $fields_meta_key == 'preview_step' ) {
				$settings['preview_step']['tabs_class'] = array( 'ppom_handle_uploadcare_settings_tab', 'col-md-12' );
			}
			if ( $fields_meta_key == 'clearable' ) {
				$settings['clearable']['tabs_class'] = array( 'ppom_handle_uploadcare_settings_tab', 'col-md-12' );
			}
			if ( $fields_meta_key == 'crop_effect' ) {
				$settings['crop_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'sharp_effect' ) {
				$settings['sharp_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'grayscale_effect' ) {
				$settings['grayscale_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'blur_effect' ) {
				$settings['blur_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'rotate_effect' ) {
				$settings['rotate_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'enhance_effect' ) {
				$settings['enhance_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'mirror_effect' ) {
				$settings['mirror_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'flip_effect' ) {
				$settings['flip_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'invert_effect' ) {
				$settings['invert_effect']['tabs_class'] = array( 'ppom_handle_uploacare_effects_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'file' ) {
				$settings['file']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'url' ) {
				$settings['url']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'facebook' ) {
				$settings['facebook']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'gdrive' ) {
				$settings['gdrive']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'gphotos' ) {
				$settings['gphotos']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'dropbox' ) {
				$settings['dropbox']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'evernote' ) {
				$settings['evernote']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'flickr' ) {
				$settings['flickr']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'onedrive' ) {
				$settings['onedrive']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'instagram' ) {
				$settings['instagram']['tabs_class'] = array( 'ppom_handle_upload_sources_tab', 'col-md-3' );
			}
			if ( $fields_meta_key == 'image_max_width' ) {
				$settings['image_max_width']['tabs_class'] = array( 'ppom_handle_validators_tab', 'col-md-6' );
			}
			if ( $fields_meta_key == 'image_max_height' ) {
				$settings['image_max_height']['tabs_class'] = array( 'ppom_handle_validators_tab', 'col-md-6' );
			}
		}

		return $settings;
	}

	function ppom_tabs_render( $tabs, $fields_type ) {

		if ( $fields_type == 'uploadcare' ) {
			$tabs['uploadcare_settings_tab'] = array(
				'label'        => __( 'UploadCare Settings', 'woocommerce-product-addon' ),
				'class'        => array( 'ppom-tabs-label' ),
				'field_depend' => array( 'uploadcare' ),
			);
		}
		$tabs['uploacare_effects_tab'] = array(
			'label'        => __( 'Effects', 'woocommerce-product-addon' ),
			'class'        => array( 'ppom-tabs-label' ),
			'field_depend' => array( 'uploadcare' ),
		);
		$tabs['upload_sources_tab']    = array(
			'label'        => __( 'Upload Sources', 'woocommerce-product-addon' ),
			'class'        => array( 'ppom-tabs-label' ),
			'field_depend' => array( 'uploadcare' ),
		);
		$tabs['validators_tab']        = array(
			'label'        => __( 'Validators', 'woocommerce-product-addon' ),
			'class'        => array( 'ppom-tabs-label' ),
			'field_depend' => array( 'uploadcare' ),
		);

		return $tabs;
	}

	function render_input( $meta, $data_name, $classes, $field_label, $options ) {

		if ( $meta['type'] != 'uploadcare' ) {
			return '';
		}

		$meta['id']          = $data_name;
		$input_wrapper_class = 'form-group';
		$input_wrapper_class = apply_filters( 'ppom_input_wrapper_class', $input_wrapper_class, $meta );

		$default_value = isset( $meta['default_value'] ) ? $meta['default_value'] : '';
		$required      = isset( $meta['required'] ) ? $meta['required'] : '';
		$classes       = implode( ' ', $classes );

		$input_req = '';
		if ( $required == 'on' ) {
			$input_req = 'required';
		}

		$html  = '';
		$html .= '<div class="' . esc_attr( $input_wrapper_class ) . '">';

		if ( $field_label ) {
			$html .= '<label class="form-control-label" for="' . esc_attr( $data_name ) . '">';
			$html .= sprintf( __( '%s', 'woocommerce-product-addon' ), $field_label ) . '</label>';
		}

		ob_start();
		ppom_load_file(
			$this->addon_path . '/templates/uploadcare.php',
			[
				'meta'     => $meta,
				'stdClass' => $this,
			] 
		);
		$html .= ob_get_clean();

		$html .= '</div>';

		echo apply_filters( 'ppom_uploadcare_html', $html );
	}

	function cart_meta( $ppom_data, $cart_item ) {


		$product_id = $cart_item['data']->post_type == 'product' ? $cart_item['data']->get_id() : $cart_item['data']->get_parent_id();

		foreach ( $cart_item['ppom']['fields'] as $key => $value ) {

			$field_meta = ppom_get_field_meta_by_dataname( $product_id, $key );
			// ppom_pa($field_meta);

			$field_type  = isset( $field_meta['type'] ) ? $field_meta['type'] : '';
			$field_title = isset( $field_meta['title'] ) ? $field_meta['title'] : '';

			if ( $field_type != 'uploadcare' ) {
				continue;
			}

			$fomatted_data = json_decode( stripcslashes( $value ), true );
			// ppom_pa($fomatted_data);

			$cdn_url = isset( $fomatted_data['cdnUrl'] ) ? $fomatted_data['cdnUrl'] : '';

			$meta_value = $this->create_cart_image_html( $fomatted_data, $field_meta );

			$ppom_data[ $key ] = array(
				'name'  => $field_title,
				'value' => $meta_value,
			);

		}

		return $ppom_data;
	}

	function create_cart_image_html( $fomatted_data, $field_meta ) {
		// ppom_pa($fomatted_data);
		$cdn_url         = isset( $fomatted_data['cdnUrl'] ) ? $fomatted_data['cdnUrl'] : '';
		$name            = isset( $fomatted_data['name'] ) ? $fomatted_data['name'] : '';
		$count           = isset( $fomatted_data['count'] ) ? $fomatted_data['count'] : '';
		$enable_img_cart = isset( $field_meta['enable_cart_img'] ) ? $field_meta['enable_cart_img'] : '';
		$enable_multiple = isset( $field_meta['multiple'] ) ? $field_meta['multiple'] : '';

		$image_html = '';

		if ( $enable_multiple == 'on' ) {
			if ( $enable_img_cart == 'on' ) {
				for ( $i = 0; $i < $count; $i ++ ) {
					$generated_link = $cdn_url . '/nth/' . $i . '/';

					$image_html .= '<div class="ppom-uploadcare-cart-img">';
					$image_html .= '<a href="' . $generated_link . '" target="_blank">';
					$image_html .= '<img src="' . $generated_link . '">';
					$image_html .= '</a>';
					$image_html .= '</div>';
				}
			} else {
				$image_html = '<a href="' . $cdn_url . '" target="_blank">' . $name . '</a>';
			}
		} else {
			if ( $enable_img_cart == 'on' ) {

				$image_html .= '<div class="ppom-uploadcare-cart-img" style="max-width: 100px;">';
				$image_html .= '<a href="' . $cdn_url . '" target="_blank">';
				$image_html .= '<img src="' . $cdn_url . '">';
				$image_html .= '</a>';
				$image_html .= '</div>';
			} else {
				$image_html = '<a href="' . $cdn_url . '" target="_blank">' . $name . '</a>';
			}
		}


		return $image_html;
	}

	function get_sources() {
		$sources = array();

		$sources = array(
			'file',
			'url',
			'facebook',
			'gdrive',
			'gphotos',
			'dropbox',
			'evernote',
			'flickr',
			'onedrive',
			'instagram',
		);

		return $sources;
	}

	function get_effects() {
		$effects = array();

		$effects = array(
			'crop',
			'sharp',
			'grayscale',
			'blur',
			'rotate',
			'enhance',
			'mirror',
			'flip',
			'invert',
		);

		return $effects;
	}
}
