<?php
/**
 * Class Frontend
 *
 * @package PPOM_Pro\Addons\ConditionalFieldRepeater
 */
namespace PPOM_Pro\Addons\ConditionalFieldRepeater;

use PPOM_Pro\Traits\StringUtility;
use PPOM_Pro\Addons\ConditionalFieldRepeater\Data_Field_Title;
use PPOM_Pro\Addons\ConditionalFieldRepeater\ConditionalFieldRepeater;

/**
 * Class Frontend
 */
class Frontend {
    use StringUtility;
    /**
     * That represents the form element name to be ignored the form value during the form submit.
     * That is used for original field that has Conditional Field Repeater is activated. Only cloned fields are saved.
     *
     * The name is not starts with [ppom] and that helps automatically
     *  ignoring of that field during the submission since our handler looks
     *  $_POST['ppom'] to save the meta to the cart.
     */
    const FORM_ELEMENT_NAME_TO_BE_IGNORED = 'ppom_cfr_template';

    /**
     * Init frontend related stuff
     *
     * @return void
     */
    public function init() {
        $this->load_assets();
        $this->attach_origin_data_to_input();
        $this->change_original_element_name();
    }

    /**
     * That has an add_filter call to renaming HTML form element name if conditional field repeater is activated for the field.
     *
     * @return void
     */
    private function change_original_element_name() {
        add_filter( 'ppom_input_name_attr', array( $this, 'handler_change_original_element_name' ), 10, 2 );
    }

    /**
     * WP filter handler that renames HTML form element name if conditional field repeater is activated for the field.
     * New form element name is ignored during the form submission.
     *
     * @param  string $form_name Current HTML form element name
     * @param  array $input_meta Meta options of the field.
     * @return string New HTML form element name
     */
    public function handler_change_original_element_name($form_name, $input_meta) {
        // If the conditional field repeater is activated for that field, change the form element name. In this way, that helps to pick out the template field from the forms elements to ignore it during the form submission.
        if( array_key_exists( ConditionalFieldRepeater::SETTING_KEY_ENABLE, $input_meta ) && $input_meta[ConditionalFieldRepeater::SETTING_KEY_ENABLE] === 'on' ) {
            return self::FORM_ELEMENT_NAME_TO_BE_IGNORED;
        }

        return $form_name;
    }

    /**
     * Attach data prop for origin field to the input.
     *
     * @return void
     */
    private function attach_origin_data_to_input() {
        add_filter( 'ppom_fe_form_element_custom_attr', array( $this, 'handler_attach_origin_data_to_input' ), 10, 2 );
    }

    /**
     * WP filter handler that injects data-cfr_origin="" attribute to rendered inputs if there is cfr setup.
     *
     * @return string all custom attributes of the input.
     */
    public function handler_attach_origin_data_to_input($html, $fm) {
        $enabled = $fm->get_meta_value( ConditionalFieldRepeater::SETTING_KEY_ENABLE ) === 'on';

        if( ! $enabled ) {
            return $html;
        }

        $settings = $fm->get_meta_value( ConditionalFieldRepeater::SETTING_KEY_FORM );

        if( !is_array($settings) || ! array_key_exists( 'origin', $settings ) || $settings['origin'] === '' ) {
            return $html;
        }

        $html .= sprintf( 'data-cfr_origin="%s"', esc_attr( $settings['origin'] ) );

        return $html;
    }

    /**
     * Attaching load assets event.
     *
     * @return void
     */
    private function load_assets() {
        add_action( 'ppom_after_scripts_loaded', array( $this, 'handler_load_assets' ) );
    }

    /**
     * Load frontend assets
     *
     * @return void
     */
    public function handler_load_assets() {
        wp_enqueue_script( 'ppom-cfr', PPOM_PRO_URL . '/assets/conditional_field_repeater/frontend/build/main.js', array( 'jquery' ), PPOM_PRO_VERSION );
        wp_localize_script( 'ppom-cfr', 'ppomCfr', [
            'CONST_MULTIPLE_ORIGIN_IDENTIFIER' => Data_Field_Title::DATA_NAME_MULTIPLE_ORIGIN_IDENTIFIER
        ] );
    }
}