<?php
/**
 * Class ConditionalFieldRepeater
 *
 * @package PPOM_Pro\Addons\ConditionalFieldRepeater
 */
namespace PPOM_Pro\Addons\ConditionalFieldRepeater;

use PPOM_Pro\Abstract_Addon;
use PPOM_Pro\Addons\ConditionalFieldRepeater\AdminSettings;
use PPOM_Pro\Addons\ConditionalFieldRepeater\Frontend;
use PPOM_Pro\Addons\ConditionalFieldRepeater\Data_Field_Title;
use PPOM_Pro\Traits\Compatibility;

/**
 * Class ConditionalFieldRepeater
 */
class ConditionalFieldRepeater extends Abstract_Addon {
    use Compatibility;

    const SETTING_KEY_FORM = 'cond_field_repeater';

     // The key of the toggle field that is used for activating the addon.
     const SETTING_KEY_ENABLE = 'cond_field_repeater_enable';

    /**
     * Init method of the Conditional Field Repeater addon.
     * Overrides Abstract_Addon::run_hooks
     *
     * @return void
     */
    public function run_hooks() {
        if( ! $this->should_load() ) {
            return;
        }

        ( new AdminSettings() )->init();
        ( new Frontend() )->init();
        ( new Data_Field_Title() )->init();
    }

    /**
     * Decide if the Conditional Field Repeater module is available or not.
     * Do not allow to use this module if the legacy input rendering mode is enabled.
     *
     * @return bool
     */
    private function should_load() {
        if( ! $this->has_ppom_feat_compatibility( 'pro_cond_field_repeat' ) ) {
            return false;
        }

        if( function_exists('ppom_is_legacy_mode') && ppom_is_legacy_mode() ) {
            return false;
        }

        return true;
    }
}