<?php
/***
 * Plugin Name: WooCommerce Quantites Pack Addon
 * Description: An addon to PPOM
 * Version: 1.1
 * Text Domain: ppom-qty-pack
 * License: GPL2
 */

namespace PPOM_Pro\Addons\QuantitiesPack;

use PPOM_Pro\Abstract_Addon;

class QuantitiesPack extends Abstract_Addon {

	function run_hooks() {
		// Field Input Path
		add_filter( 'nm_input_class-qtypack', array( $this, 'addon_path' ), 10, 2 );

		// Loading All Input in PRO
		add_filter( 'ppom_all_inputs', array( $this, 'load_addon' ), 10, 2 );

		// Load PPOM Scripts
		add_action( 'ppom_hooks_inputs', array( $this, 'hook_input_scripts' ), 10, 2 );

		// PPOM Fields Rendering
		add_action( 'ppom_rendering_inputs', array( $this, 'render_input' ), 10, 5 );

		// hook for render tabs
		add_filter( 'ppom_fields_tabs_show', array( $this, 'tabs_render' ), 10, 2 );
	}


	/**
	 * Quantities Pack Input Path Load
	 */
	function addon_path( $path, $type ) {

		if ( file_exists( $this->addon_path . '/classes/input.qtypack.php' ) ) {
			$path = $this->addon_path . "/classes/input.{$type}.php";
		}

		return $path;
	}


	/**
	 * Loading All PRO Inputs
	 */
	function load_addon( $inputs_array, $inputObj ) {

		// checking qtypack addon is enable
		$inputs_array['qtypack'] = $inputObj->get_input( 'qtypack' );

		return $inputs_array;
	}


	/**
	 * Load Scripts
	 */
	function hook_input_scripts( $field, $data_name ) {

		if ( $field['type'] != 'qtypack' ) {
			return '';
		}

		if ( $field['type'] == 'qtypack' ) {

			$local_vars = array();

			$pack_size        = isset( $field['pack_size'] ) ? $field['pack_size'] : '';
			$packsize_message = isset( $field['packsize_message'] ) ? $field['packsize_message'] : '';

			$packsize_message = sprintf( __( '%s', 'woocommerce-product-addon' ), str_replace( '%PACKSIZE%', $pack_size, $packsize_message ) );

			wp_enqueue_script( 'ppom-qtypack', $this->addon_url . '/js/ppom-qtypack.js', array( 'jquery' ), PPOM_PRO_VERSION, true );

			$local_vars = array(
				'ajaxurl'          => admin_url( 'admin-ajax.php', ( is_ssl() ? 'https' : 'http' ) ),
				'pack_size'        => $pack_size,
				'packsize_message' => $packsize_message,
			);

			wp_localize_script( 'ppom-qtypack', "ppom_qtypack{$data_name}_vars", $local_vars );
		}
	}

	/**
	 * Render Quantities Pack Input
	 */
	function render_input( $meta, $data_name, $classes, $field_label, $options ) {

		if ( $meta['type'] != 'qtypack' ) {
			return '';
		}

		$meta['id']          = $data_name;
		$input_wrapper_class = 'form-group';
		$input_wrapper_class = 'ppom-quantities-pack';

		$input_wrapper_class = apply_filters( 'ppom_input_wrapper_class', $input_wrapper_class, $meta );

		$pack_size = isset( $meta['pack_size'] ) && $meta['pack_size'] != '' ? $meta['pack_size'] : 0;

		$template_vars  = array();
		$templates_name = '';

		$html  = '';
		$html .= '<div class="' . esc_attr( $input_wrapper_class ) . '">';

		if ( $pack_size == 0 ) {
			$html .= __( 'Please Include Pack Size ', 'woocommerce-product-addon' );
		} else {
			if ( $field_label ) {
				$html .= '<label class="form-control-label" for="' . esc_attr( $data_name ) . '">';
				$html .= sprintf( __( '%s', 'woocommerce-product-addon' ), $field_label ) . '</label>';
			}

			$templates_name = 'quantities-pack.php';
			$template_vars  = array(
				'meta'      => $meta,
				'data_name' => $data_name,
			);

			ob_start();
			$this->load_template( $templates_name, $template_vars );
			$html .= ob_get_clean();
		}

		$html .= '</div>';    // form-group

		echo apply_filters( 'ppom_qtypack_html', $html );
	}

	/**
	 * Show variation tabs
	 */
	function tabs_render( $tabs, $fields_type ) {

		if ( $fields_type == 'qtypack' ) {
			$tabs['add_option_tab']['field_depend'] = array( 'qtypack' );
			// ppom_pa($tabs);
		}


		return $tabs;
	}
}
