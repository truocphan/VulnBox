<?php
/***
 * Plugin Name: PPOM Addon: Image DropDown
 * Description: PPOM ADDON - Add Image DropDown for large number of images.
 * Version: 3.2
 * License: GPLv2 or later
 * License URI: http://www.gnu.org/licenses/gpl-2.0.html
 * Text Domain: ppom-addon-imageselect
 */

namespace PPOM_Pro\Addons\ImageDropdown;

use PPOM_Pro\Abstract_Addon;

class ImageDropdown extends Abstract_Addon {

	function run_hooks() {
		// ImageDropdpwn scripts load
		add_action( 'ppom_hooks_inputs', array( $this, 'hook_input_scripts' ), 10, 2 );

		// Loading all input in PRO
		add_filter( 'ppom_all_inputs', array( $this, 'load_addon' ), 10, 2 );

		// File path
		add_filter( 'nm_input_class-imageselect', array( $this, 'addon_path_imageselect' ), 10, 2 );

		// rendering inputs
		add_action( 'ppom_rendering_inputs', array( $this, 'render_input_imageselect' ), 10, 5 );

		// woocommerce add ImageDropdpwn into cart
		add_filter( 'ppom_meta_data_field', array( $this, 'cart_meta' ), 99, 4 );

		// woocommerce add images on gallery hook
		add_action( 'woocommerce_product_thumbnails', array( $this, 'product_gallery_images' ), 10 );

		// control ppom conditions
		add_filter(
			'ppom_enqueue_conditions_js',
			function ( $flag ) {
				return true;
			} 
		);

		// Add images on Gallery For Kalium Theme Support
		add_action( 'kalium_woocommerce_single_product_images', array( $this, 'load_gallery_images' ), 10 );


		if ( $this->get_theme_name() == 'Flatsome' ) {
			add_filter(
				'woocommerce_gallery_thumbnail_size',
				function ( $size ) {
					return array( '100', '100' );
				} 
			);
		}
	}


	/**
	 * Loading all PRO inputs
	 */
	function load_addon( $inputs_array, $inputObj ) {

		// checking fixedprice addon is enable
		$inputs_array['imageselect'] = $inputObj->get_input( 'imageselect' );

		return $inputs_array;
	}

	/**
	 * Get imagedropdown settings
	 */
	function addon_path_imageselect( $path, $type ) {

		if ( file_exists( $this->addon_path . '/classes/input.imageselect.php' ) ) {
			$path = $this->addon_path . "/classes/input.{$type}.php";
		}

		return $path;
	}

	/**
	 * Add imagedropdown images into wc gallery
	 */
	function product_gallery_images() {
		$this->set_attachments_id();
	}

	/**
	 *  Load Images On Gallery (Theme support)
	 */
	function load_gallery_images() {
		$this->set_attachments_id();
	}

	/**
	 * Add Images on WC gallery
	 */
	function set_attachments_id() {

		global $product;
		$product_id          = ppom_get_product_id( $product );
		$image_meta          = ppom_has_field_by_type( $product_id, 'imageselect' );
		$attachment_id_array = $product->get_gallery_image_ids();

		if ( ! $image_meta ) {
			return '';
		}

		foreach ( $image_meta as $index => $meta_data ) {

			if ( ( isset( $meta_data['enable_gallery'] ) && $meta_data['enable_gallery'] == 'on' ) ||
				 ( isset( $meta_data['image_replace'] ) && $meta_data['image_replace'] ) ) {

				if ( ! ppom_is_field_visible( $meta_data ) ) {
					continue;
				}

				$dropdown_images = isset( $meta_data['images'] ) ? $meta_data['images'] : array();
				foreach ( $dropdown_images as $i => $image_data ) {
					$attachment_id         = isset( $image_data['id'] ) ? $image_data['id'] : '';
					$attachment_id_array[] = $attachment_id;
				}
			}
		}

		$product->set_gallery_image_ids( $attachment_id_array );
	}

	/**
	 * Loading inputs scripts
	 */
	function hook_input_scripts( $field, $data_name ) {

		if ( $field['type'] != 'imageselect' ) {
			return '';
		}

		if ( $field['type'] == 'imageselect' ) {

			wp_enqueue_style( 'ppom-imageselect-css', $this->addon_url . '/assets/ppom-imageselect.css' );
			wp_enqueue_script( 'ppom-imageselect-lib', $this->addon_url . '/assets/ddslick.js', array( 'jquery' ), PPOM_VERSION, true );

			$themes_meta = $this->get_theme_support_list();
			$theme_name  = $this->get_theme_name();

			if ( isset( $themes_meta[ $theme_name ] ) ) {

				$file_path = isset( $themes_meta[ $theme_name ]['file_path'] ) ? $themes_meta[ $theme_name ]['file_path'] : '';
				$theme_id  = isset( $themes_meta[ $theme_name ]['id'] ) ? $themes_meta[ $theme_name ]['id'] : '';

				wp_enqueue_script( 'ppom-imageselect-' . $theme_id, $file_path, array( 'jquery' ), PPOM_PRO_VERSION, true );
			} else {
				wp_enqueue_script( 'ppom-imageselect-js', $this->addon_url . '/assets/ppom-imageselect.js', array( 'jquery' ), PPOM_VERSION, true );
			}
		}
	}

	/**
	 * Render imagedropdown meta
	 */
	function render_input_imageselect( $meta, $data_name, $classes, $field_label, $options ) {
		// ppom_pa($meta);
		/** UPDATED BY BROZRA WEB SOLUTIONS - 1 JULY 2019
		 *  added surrounding brackets for if statement */
		if ( $meta['type'] != 'imageselect' ) {
			return '';
		}
		$meta['id'] = $data_name;


		$postion  = isset( $meta['position'] ) ? $meta['position'] : 'left';
		$bg_color = isset( $meta['bg_color'] ) ? $meta['bg_color'] : '';

		// handle images width
		if ( isset( $meta['image_width'] ) && $meta['image_width'] != '' ) {
			$img_width = $meta['image_width'];
		} else {
			$img_width = '64px';
		}

		// handle images height
		if ( isset( $meta['image_height'] ) && $meta['image_height'] != '' ) {
			$img_height = $meta['image_height'];
		} else {
			$img_height = 'auto';
		}

		$dd_height = isset( $meta['dropdown_height'] ) ? $meta['dropdown_height'] : 'auto';

		// enable gallery
		if ( isset( $meta['enable_gallery'] ) && $meta['enable_gallery'] != '' ) {
			$enable_gallery = $meta['enable_gallery'];
		} else {
			$enable_gallery = 'off';
		}

		// enable image replacing
		if ( isset( $meta['image_replace'] ) && $meta['image_replace'] != '' ) {
			$image_replace = $meta['image_replace'];
		} else {
			$image_replace = 'off';
		}


		$html       = '';
		$image_meta = isset( $meta['images'] ) ? $meta['images'] : array();
		// ppom_pa($image_meta);
		if ( is_product() ) {
			global $product;
			$image_meta = ppom_convert_options_to_key_val( $meta['images'], $meta, $product );
		}

		// if( isset($meta['first_option']) && !empty($meta['first_option']) ) {

		// $fo_labeld = ppom_wpml_translate($meta['first_option'], 'PPOM');
		// $first_option = array(  'title'=> $fo_labeld,
		// 'price' => '',
		// 'description'   => '',
		// 'id' => '',
		// 'link' => '',
		// );
		// array_unshift($image_meta, $first_option);
		// }

		// ppom_pa($image_meta);

		$imageselect_id = 'ppom_imageselect_' . $data_name;

		/** UPDATED BY BROZRA WEB SOLUTIONS - 1 JULY 2019
		 *  elimination of redundant $input_wrapper_class assignments and streamlining code */
		$html .= '<div class="' . esc_attr( apply_filters( 'ppom_input_wrapper_class', 'form-group ppom-imageselect-design', $meta ) ) . '">';

		$images = array();
		foreach ( $image_meta as $index => $img_val ) {

			$attachment_id  = isset( $img_val['id'] ) ? $img_val['id'] : '';
			$all_images_url = $this->dropdown_thumbnail_size( $attachment_id );
			$images[]       = array(
				'image_url' => $all_images_url,
			);
		}

		$images = json_encode( $images );

		$html .= '<input 
				type="hidden" 
				class="ppom-selectimage-meta" 
				data-id="' . esc_attr( $imageselect_id ) . '" 
				data-position="' . esc_attr( $postion ) . '" 
				data-bg-color="' . esc_attr( $bg_color ) . '" 
				data-enable-gallery="' . esc_attr( $enable_gallery ) . '" 
				data-enable-rpimg="' . esc_attr( $image_replace ) . '" 
				data-dd_height="' . esc_attr( $dd_height ) . '" 
				data-img-links="' . esc_attr( $images ) . '">';

		if ( $field_label ) {
			$html .= '<label class="form-control-label" for="' . $data_name . '">';
			$html .= sprintf( __( '%s', 'woocommerce-product-addon' ), $field_label ) . '</label>';
		}

		$html .= '<select id="' . esc_attr( $imageselect_id ) . '" name="ppom[fields][' . esc_attr( $data_name ) . '][imageselect]">';
		// $html .= '<option>Select Image</option>';

		// ppom_pa($image_meta);
		foreach ( $image_meta as $index => $img_val ) {

			$title  = isset( $img_val['label'] ) ? stripslashes( $img_val['label'] ) : '';
			$url    = isset( $img_val['link'] ) ? $img_val['link'] : '';
			$the_id = isset( $img_val['id'] ) ? $img_val['id'] : '';
			$desc   = isset( $img_val['description'] ) ? $img_val['description'] : '';
			// ppom_pa($img_val);
			$price           = isset( $img_val['price'] ) ? $img_val['price'] : '';
			$raw             = isset( $img_val['raw'] ) ? $img_val['raw'] : '';
			$img_size_url    = $this->dropdown_thumbnail_size( $the_id );
			$title_withprice = $title;

			$html .= '<option 
				data-description="' . esc_attr( $desc ) . '"
				value="' . esc_attr( $the_id ) . '"
				data-imagesrc="' . esc_attr( $url ) . '" 
				data-price="' . esc_attr( $price ) . '"
				data-raw="' . esc_attr( $raw ) . '"
				data-label="' . esc_attr( $raw ) . '"
				data-dataname="' . esc_attr( $data_name ) . '"
				data-imagewidth="' . esc_attr( $img_width ) . '"
				data-imageheight="' . esc_attr( $img_height ) . '"
				data-imagesize="' . esc_attr( $img_size_url ) . '"
				>' . sprintf( __( '%s', 'woocommerce-product-addon' ), $title_withprice ) . '</option>';
		}
		$html .= '</select>'; // end select
		$html .= '</div>';    // form-group

		echo apply_filters( 'ppom_imageselect_html', $html );
	}

	/**
	 * Loading cart meta
	 */
	function cart_meta( $meta_data, $key, $field_meta, $product_id ) {
		/** UPDATED BY BROZRA WEB SOLUTIONS - 1 JULY 2019
		 * added surrounding brackets for if statement */
		if ( $field_meta['type'] != 'imageselect' ) {
			return $meta_data;
		}

		$meta_data['value'] = $this->create_image_html( $meta_data, $field_meta );

		return $meta_data;
	}

	/**
	 * imagedropdown image create
	 */
	function create_image_html( $meta_data, $field_meta ) {

		// ppom_pa($field_meta);
		// Getting image's option against image_id
		$image_id = isset( $meta_data['value'] ) ? $meta_data['value'] : '';

		$image_option    = $this->get_image_option_by_image_id( $image_id, $field_meta );
		$image_title     = isset( $image_option['title'] ) ? stripslashes( $image_option['title'] ) : '';
		$image_price     = isset( $image_option['price'] ) ? stripslashes( $image_option['price'] ) : '';
		$cart_meta_label = "{$image_title}";
		if ( (float) ppom_price( $image_price ) > 0 ) {
			$cart_meta_label .= ' - ' . ppom_price( $image_price );
		}
		$image_attributes = wp_get_attachment_image_src( $image_id, 'full' );
		$image_url        = $image_attributes[0];

		/** UPDATED BY BROZRA WEB SOLUTIONS - 1 JULY 2019
		 * simplification of cart variation image and label for image dropdown data
		 * allows for easier CSS overrides */
		$image_html = '<img class="img-thumbnail" style="width:' . esc_attr( ppom_get_thumbs_size() ) . '" src="' . esc_url( $image_url ) . '" > <span class="ppom-image-meta-title">' . $cart_meta_label . '</span>';

		return $image_html;
	}

	// Getting image option data by image_id
	function get_image_option_by_image_id( $image_id, $field_meta ) {

		/** UPDATED BY BROZRA WEB SOLUTIONS - 1 JULY 2019
		 * added surrounding brackets for if statement */
		if ( empty( $field_meta ) ) {
			return 0;
		}

		$image_option = 0;
		foreach ( $field_meta['images'] as $option ) {

			if ( $option['id'] == $image_id ) {
				$image_option = $option;
			}
		}

		return apply_filters( 'ppom_image_option_by_image_id', $image_option, $field_meta, $image_id );
	}

	/**
	 * wc product images size
	 */
	function dropdown_thumbnail_size( $attachment_id ) {

		$gallery_thumbnail = wc_get_image_size( 'gallery_thumbnail' );

		$thumbnail_size = apply_filters(
			'woocommerce_gallery_thumbnail_size',
			array(
				$gallery_thumbnail['width'],
				$gallery_thumbnail['height'],
			) 
		);

		$imgs_src = wp_get_attachment_image_src( $attachment_id, $thumbnail_size );


		$image_src = isset( $imgs_src['0'] ) ? $imgs_src['0'] : null;

		return $image_src;
	}

	/**
	 * Get Theme Information
	 */
	function get_theme_name() {

		$theme_info = wp_get_theme();
		$is_child   = $this->is_childtheme_active( $theme_info );

		if ( $is_child ) {
			$theme_name = $theme_info->parent()->Name;
		} else {
			$theme_name = $theme_info->get( 'Name' );
		}

		return apply_filters( 'ppom_imageselect_theme_name', $theme_name, $theme_info );
	}

	/**
	 * Check If Child Theme Active
	 */
	function is_childtheme_active( $theme_data ) {

		$parent = $theme_data->parent();
		if ( ! empty( $parent ) ) {
			return true;
		}

		return false;
	}

	/**
	 * Themes Support List
	 */
	function get_theme_support_list() {
		$themes = array(
			'Porto'    => array(
				'id'        => 'porto',
				'name'      => 'Porto',
				'file_path' => $this->addon_url . '/assets/imageselect-porto.js',
			),
			'Flatsome' => array(
				'id'        => 'flatsome',
				'name'      => 'Flatsome',
				'file_path' => $this->addon_url . '/assets/imageselect-flatsome.js',
			),
			'Kalium'   => array(
				'id'        => 'kalium',
				'name'      => 'Kalium',
				'file_path' => $this->addon_url . '/assets/imageselect-kalium.js',
			),
			'WR Nitro' => array(
				'id'        => 'wr-nitro',
				'name'      => 'WR Nitro',
				'file_path' => $this->addon_url . '/assets/imageselect-wr-nitro.js',
			),
		);

		return apply_filters( 'ppom_imageselect_theme_support_list', $themes );
	}
}
