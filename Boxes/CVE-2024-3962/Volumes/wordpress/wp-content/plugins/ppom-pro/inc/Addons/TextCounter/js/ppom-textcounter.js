"use strict"
jQuery(function($) {

    /*****************************
     *    Text Counter Addon JS   *
     ******************************/

    /*
     **============= Get PPOM inputs fields meta ================ 
     */
    var fields_meta = ppom_input_vars.field_meta;


    /*
     **============= Loop PPOM inputs fields meta ================ 
     */
    $.each(fields_meta, function(index, value) {

        var fields_type = value.type;

        if (fields_type == 'textcounter') {

            var data_name = value.data_name;
            var count_type = value.count_type;
            var maxlength = value.maxlength;
            var count_price = value.count_price;
            var count_space = value.enabled_space;
            var title = value.title;
            var counter_bg_color = value.counter_bg_color;
            var counter_color = value.counter_color;

            if (maxlength == '') {
                maxlength = 100;
            }

            // localize script
            var settingObj = window["ppom_textcounter_" + data_name + "_vars"];

            // console.log(settingObj);
            var textcountmsg = settingObj.ppom_limit_label;
            var textcountprice = settingObj.ppom_price_label;

            if (count_price == '') {
                count_price = 0;
            }

            var include_space = false;
            if (count_space == 'on') {
                include_space = true;
            }

            $(".ppom-input-" + data_name + " .ppom-textcounter").textcounter({
                type: count_type,
                max: maxlength,
                countContainerClass: "ppom-textcounter-section",
                textCountMessageClass: 'ppom-textcounter-msg',
                counterText: textcountmsg + ": %d/" + maxlength,
                countSpaces: include_space,
                count_price: textcountprice,
                countContainerTextColor: counter_color,
                countContainerBGColor: counter_bg_color,
                numcount: function(textCount, el) {

                    var total_price = count_price * textCount;
                    ppom_textcounter_create_hidden_input(data_name, textCount, el, total_price, title);
                }
            });
        }
    });


    /*
     **============= Create hidden input for price ================ 
     */
    function ppom_textcounter_create_hidden_input(data_name, textCount, el, total_price, title) {

        var field_val = $(el).val();

        var container = $(".ppom-input-" + data_name + "");

        // create input id
        var the_id = 'ppom-textcounter-rm' + data_name;

        // remove/reset
        $("#" + the_id).remove();

        var _x = $('<input/>')
            .attr({ 'type': 'checkbox', 'name': 'ppom[fields][' + data_name + ']' })
            .attr('id', the_id)
            .attr('data-price', total_price)
            .attr('data-label', '')
            .attr('data-title', title)
            .val(field_val)
            .prop('checked', true)
            .css('display', 'none')
            .appendTo(container);

        ppom_update_option_prices();
    }


    /*
     **============= Reset TextCounter When Condition Apply ================ 
     */
    $(document).on('ppom_field_hidden', function(e) {
        // console.log(e)
        var element_type = ppom_get_field_type_by_id(e.field);
        switch (element_type) {

            case 'textcounter':
                $('input[name="ppom[fields][' + e.field + ']"]').prop('checked', false);
                $('input[name="ppom[fields][' + e.field + ']"]').remove();
                $('#' + e.field).val('');
                break;
        }

    
        // ppom_hidden_fields.push(e.field); // FOUND A BUG WHILE THIS LINE
        $.event.trigger({
            type: "ppom_hidden_fields_updated",
            field: e.field,
            time: new Date()
        });
    });


});
