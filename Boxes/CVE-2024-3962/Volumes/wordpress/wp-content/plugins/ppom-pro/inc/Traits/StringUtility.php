<?php
/**
 * Trait StringUtility
 *
 * @package PPOM_Pro\Traits
 */
namespace PPOM_Pro\Traits;

/**
 * Trait Helper provides common utility methods
 */
trait StringUtility {
    /**
     * Does string contains the given string?
     *
     * @param string $content String content.
     * @param string $needle The content that will be searched.
     *
     * @return boolean
     */
    private static function str_contains($content, $needle) {
        return strpos( $content, $needle ) !== false;
    }

    /**
     * Removes the given suffix from the content
     *
     * @param  string $content Entire of the content.
     * @param  string $suffix_will_be_removed Suffix will be removed from the $content.
     * @return string The remain content.
     */
    private static function remove_specific_suffix($content, $suffix_will_be_removed) {
        if ( self::str_contains( $content, $suffix_will_be_removed ) ) {
			$arr       = explode( $suffix_will_be_removed, $content );
			$content = $arr[0];
		}

		return $content;
    }

    /**
     * Responsible from the replacing the magic tags with the real values.
     *
     * @param string Content that represents the entire of the content that contains magic tags.
     * @param <string, string> Array key represents the magic tag (without bracket), Array values represents the real values.
     * @return string Content that contains real values, no any magic tag anymore.
     */
    private static function solve_magic_tags($content, $data) {
        $magic_tags = array_map( function( $key ) {
            return sprintf( '{%s}', $key );
        }, array_keys($data) );

        $real_values = array_values($data);

        return str_replace( $magic_tags, $real_values, $content );
    }
}